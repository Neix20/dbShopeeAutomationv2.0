@using dbShopeeAutomationV2.Models;
@using System.Collections.Generic;

@{
    dbShopeeAutomationV2Entities db = new dbShopeeAutomationV2Entities();

    int c_pro_sta_id = dbStatusFunction.productionStatusID("complete");

    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "ProductionGridView";
        settings.Width = Unit.Percentage(100);

        settings.CallbackRouteValues = new { Controller = "Production", Action = "ProductionGridViewPartial" };
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Production", Action = "ProductionGridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Production", Action = "ProductionGridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Production", Action = "ProductionGridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButtonInHeader = false;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "production_id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.SettingsSearchPanel.Visible = true;

        // Header Set Center
        settings.Styles.Header.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Header.VerticalAlign = VerticalAlign.Middle;

        settings.Columns.Add("title").Caption = "Title";
        settings.Columns.Add("description").Caption = "Description";

        // Production Status
        settings.Columns.Add(col =>
        {
            col.FieldName = "production_status_id";
            col.Caption = "Status";

            col.ColumnType = MVCxGridViewColumnType.ComboBox;
            ComboBoxProperties prop = col.PropertiesEdit as ComboBoxProperties;
            prop.DataSource = db.TShopeeProductionStatus.ToList();
            prop.TextField = "name";
            prop.ValueField = "production_status_id";
            prop.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
            prop.ValidationSettings.RequiredField.IsRequired = true;
        });

        // Created Date
        settings.Columns.Add(column =>
        {
            column.FieldName = "created_date";
            column.Caption = "Production Date";
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            column.PropertiesEdit.DisplayFormatString = "yyyy-MM-dd";

            DateEditProperties prop = column.PropertiesEdit as DateEditProperties;
            prop.DisplayFormatString = "yyyy-MM-dd";
            prop.DisplayFormatInEditMode = true;

            prop.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
            prop.ValidationSettings.RequiredField.IsRequired = true;
        });

        // Total Usage
        settings.Columns.Add(col =>
        {
            col.FieldName = "total_usage";
            col.Caption = "Total Usage";

            col.ColumnType = MVCxGridViewColumnType.SpinEdit;
            SpinEditProperties prop = col.PropertiesEdit as SpinEditProperties;
            prop.NumberType = SpinEditNumberType.Float;
            prop.MinValue = 0;
            prop.MaxValue = 10000000;
            prop.Increment = 0.1M;

            prop.DecimalPlaces = 2;
            prop.DisplayFormatString = "N2";
        });

        // Complete Button
        settings.Columns.Add(col =>
        {
            col.FieldName = "Complete?";
            col.UnboundType = DevExpress.Data.UnboundColumnType.String;
            col.PropertiesEdit.EncodeHtml = false;

            col.EditFormSettings.Visible = DefaultBoolean.False;
        });

        // Staff Name
        settings.Columns.Add("staff_name").Caption = "Staff Name";

        settings.CustomUnboundColumnData = (s, e) =>
        {
            if (e.Column.FieldName.Equals("Complete?"))
            {
                int production_id = int.Parse(e.GetListSourceFieldValue("production_id").ToString());
                int pro_sta_id = int.Parse(e.GetListSourceFieldValue("production_status_id").ToString());
                string to_disable = (pro_sta_id == c_pro_sta_id) ? " disabled " : "";
                string js_func = "$.ajax({ url: '/Production/CompleteProduction',type: 'Post', data: { 'production_id': this.value }, success: resp => { $('#productionFormResp').html(resp); location.reload(); } });";
                e.Value = $"<button class='btn btn-outline-success' value='{production_id}'{to_disable}onclick=\"{js_func}\">Complete</button>";
            }
        };

        // Cell Styles Center
        settings.Styles.Cell.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Cell.VerticalAlign = VerticalAlign.Middle;

        // Setting Detail Grid
        settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = false;
        settings.SettingsDetail.ShowDetailRow = true;

        settings.SetDetailRowTemplateContent(c =>
        {
            Html.RenderAction("ProductionDetailGridViewPartial", "ProductionDetail", new { production_id = DataBinder.Eval(c.DataItem, "production_id") });
        });
    });

    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()